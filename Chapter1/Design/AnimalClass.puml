@startuml

abstract class Animal {
    {field} +有生命
    {method} +新陈代谢(in o2 : 氧气, in water : 水)
    {method} +繁殖()
}

note right
类
第一行：类名称
第二行：特性（字段或属性）
第三行：操作（方法或行为）

若类名称为斜体，则此类为抽象类
end note

class 氧气

class 水

氧气 <.. Animal : 依赖关系
水 <.. Animal : 依赖关系

class 鸟{
    {field} +羽毛
    {field} +有角质喙没有牙齿
    {method} +下蛋()
}

Animal <|-- 鸟 : 继承关系

class 翅膀

鸟 *-- 翅膀 : 组合关系

class 大雁{
    +下蛋()
    +飞()
}

鸟 <|-- 大雁 : 继承关系

interface 飞翔 {
    +飞()
}

note left
接口
顶端有<<interface>>?
第一行：接口名称
第二行：接口方法
end note

飞翔 <|.. 大雁 : 实现接口

class 雁群{
    +V形飞行()
    +一行飞行()
}

雁群 o-- 大雁 : 聚合关系

鸭 : +下蛋()

鸟 <|-- 鸭 : 继承关系

唐老鸭 : +讲话()
唐老鸭 -() 讲人话
note right
接口
棒棒糖表示法
圆圈旁为接口名称
接口方法在实现类中出现
end note


鸭 <|-- 唐老鸭 : 继承关系

企鹅 : +下蛋()

鸟 <|-- 企鹅 : 继承关系

企鹅 --> 气候 : 关联关系

@enduml